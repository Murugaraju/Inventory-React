{"version":3,"sources":["store.js","components/inventorylist/InventoryList.js","components/inventorylist/inventorydetail/InventoryDetail.js","containers/inventory/Inventory.js","components/layout/InvetoryAppLayout.js","App.js","serviceWorker.js","index.js"],"names":["exercises","id","title","description","muscles","useStyles","makeStyles","theme","root","display","list","breakpoints","up","height","overflowY","InventoryList","props","classes","paneData","undefined","data","map","dt","i","ListItem","key","button","Card","raised","style","width","CardContent","Typography","color","variant","toUpperCase","slice","CardActions","align","marginTop","marginLeft","Divider","List","className","InventoryDetail","margin","Inventory","state","Grid","container","item","xs","sm","lg","this","Component","drawer","flexShrink","appBar","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","paddingTop","ResponsiveDrawer","useTheme","React","useState","mobileOpen","setMobileOpen","console","log","handleDrawerToggle","text","index","ListItemIcon","ListItemText","primary","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","noWrap","Button","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","children","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b732d73f.chunk.js","sourcesContent":["export const muscles = [\"all\", \"shoulders\", \"chest\", \"arms\", \"back\", \"legs\"];\n\nexport const exercises = [\n  {\n    id: \"overhead-press\",\n    title: \"Overhead Press\",\n    description: \"Delts exercise...\",\n    muscles: \"shoulders\"\n  },\n  {\n    id: \"dips\",\n    title: \"Dips\",\n    description: \"Triceps exercise...\",\n    muscles: \"arms\"\n  },\n  {\n    id: \"barbell-curls\",\n    title: \"Barbell Curls\",\n    description: \"Biceps exercise...\",\n    muscles: \"arms\"\n  },\n  {\n    id: \"bench-press\",\n    title: \"Bench Press\",\n    description: \"Chest exercise...\",\n    muscles: \"chest\"\n  },\n  {\n    id: \"pull-ups\",\n    title: \"Pull Ups\",\n    description: \"Back and biceps exercise...\",\n    muscles: \"back\"\n  },\n  {\n    id: \"deadlifts\",\n    title: \"Deadlifts\",\n    description: \"Back and leg exercise...\",\n    muscles: \"back\"\n  },\n  {\n    id: \"squats\",\n    title: \"Squats\",\n    description: \"Legs exercise...\",\n    muscles: \"legs\"\n  },\n  {\n    id: \"squats\",\n    title: \"Squats\",\n    description: \"Legs exercise...\",\n    muscles: \"legs\"\n  },\n  {\n    id: \"squats\",\n    title: \"Squats\",\n    description: \"Legs exercise...\",\n    muscles: \"legs\"\n  },\n  {\n    id: \"squats\",\n    title: \"Squats\",\n    description: \"Legs exercise...\",\n    muscles: \"legs\"\n  },\n  {\n    id: \"squats\",\n    title: \"Squats\",\n    description: \"Legs exercise...\",\n    muscles: \"legs\"\n  },\n  \n];\n","import React, { Fragment } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n  \r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    list: {\r\n      \r\n      [theme.breakpoints.up('md')]: {\r\n        height: 780,\r\n        overflowY:'scroll'\r\n        \r\n      },\r\n    },\r\n\r\n\r\n}));\r\n\r\nfunction InventoryList(props) {\r\n  let classes=useStyles()\r\n  // console.log(\"printing classes ==>\",classes)\r\n  let paneData = \"No Data to display\";\r\n  if (props.data !== undefined) {\r\n    paneData = props.data.map((dt, i) => {\r\n      return (\r\n        <Fragment >\r\n            \r\n            <ListItem key={i}  button  >\r\n          <Card key={i} raised={true} style={{width:'100%',height:'100%'}}>\r\n            <CardContent>\r\n              <Typography color=\"primary\" variant=\"subtitle1\">\r\n                {dt.muscles[0].toUpperCase() + dt.muscles.slice(1)}\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n             Action Empty\r\n            </CardActions>\r\n          </Card>\r\n          </ListItem>\r\n        </Fragment>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n      <Fragment>\r\n       {/* <AppBar position=\"static\" color='inherit' style={{paddingBottom:'12px',margin:'0px'}}> */}\r\n      <Typography align=\"left\" variant=\"h6\" style={{marginTop:'13px',marginLeft:'10px'}}>\r\n        <strong>Inventory List</strong>\r\n      </Typography>\r\n      {/* </AppBar>  */}\r\n      <br/>\r\n      <Divider />\r\n      <List  className={classes.list}>\r\n      {paneData}\r\n      </List>\r\n      </Fragment>\r\n    \r\n  );\r\n};\r\n\r\nexport default InventoryList;\r\n","import React, { Fragment } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\n\r\nconst InventoryDetail = props => {\r\n \r\n   \r\n\r\n  return (\r\n    \r\n        <Card raised style={{height:\"90%\",margin:\"10px\"}}>\r\n            <CardContent>\r\n                <Typography  variant=\"paragraph\">\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\r\n          ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum\r\n          facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit\r\n          gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id\r\n          donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit\r\n          adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras.\r\n          Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis\r\n          imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget\r\n          arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\r\n          donec massa sapien faucibus et molestie ac.\r\n                 </Typography>\r\n            </CardContent>\r\n        </Card>\r\n      \r\n      \r\n     \r\n    \r\n  );\r\n};\r\n\r\nexport default InventoryDetail;\r\n","import React,{Component} from 'react';\nimport {muscles,exercises} from '../../store';\nimport Grid from '@material-ui/core/Grid';\nimport InventoryList from '../../components/inventorylist/InventoryList';\nimport InventoryDetail from '../../components/inventorylist/inventorydetail/InventoryDetail';\n\nclass Inventory extends Component{\n\n\n    constructor(props){\n        super(props);\n        this.state={\n            data:exercises\n        };\n    }\n\n    render(){\n        return(\n           <Grid container> \n            <Grid item xs={12} sm={4} lg={4} >\n            <InventoryList data={this.state.data}/>\n            </Grid>\n            <Grid item xs={12} sm={8} lg={8}>\n            <InventoryDetail/>\n            </Grid>\n           \n           </Grid>\n        );\n    }\n\n}\n\n\n\nexport default Inventory;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    // padding: theme.spacing(3),\r\n    paddingTop: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { container } = props;\r\n  const classes = useStyles(); \r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    console.log(\"printing classes from makeStyles\",classes)\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} ><Typography variant=\"h6\" color=\"inherit\" style={{marginLeft:'21px',paddingTop:'5px'}}>HPE Inventory</Typography>\r\n      <Typography variant=\"caption\" color=\"inherit\" style={{marginLeft:'21px'}}>Menu</Typography>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      \r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Nikhith ServerGuy\r\n          </Typography>\r\n          <Button style={{marginLeft:'auto'}} color=\"inherit\"><strong>Login</strong>  < AccountBoxIcon/></Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        \r\n        \r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  container: PropTypes.instanceOf(typeof Element === 'undefined' ? Object : Element),\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React,{Component, Fragment} from 'react';\nimport Inventory from './containers/inventory/Inventory';\n\nimport ProjectLayout from './components/layout/InvetoryAppLayout';\nclass App extends Component {\n  render(){\n    return(\n      <Fragment>\n        \n        <ProjectLayout>\n          <Inventory />\n        </ProjectLayout>\n       \n      </Fragment>\n    );\n\n    \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}