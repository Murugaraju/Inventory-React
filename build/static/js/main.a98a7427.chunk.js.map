{"version":3,"sources":["store.js","components/layout/LeftPane.js","components/layout/RightPane.js","containers/inventory/Inventory.js","components/layout/Header.js","components/layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["exercises","id","title","description","muscles","pane","props","paneData","undefined","data","map","dt","i","ListItem","key","selected","button","Card","raised","style","width","height","CardContent","Typography","color","variant","toUpperCase","slice","CardActions","Paper","className","overflowY","overflowX","AppBar","position","backgroundColor","paddingBottom","align","marginTop","marginLeft","Divider","List","margin","Inventory","state","Grid","container","item","xs","sm","lg","LeftPane","this","RightPane","Component","header","Toolbar","IconButton","edge","aria-label","display","Button","footer","Tabs","value","indicatorColor","textColor","centered","Tab","label","App","Header","Footer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a98a7427.chunk.js","sourcesContent":["export const muscles = [\"all\", \"shoulders\", \"chest\", \"arms\", \"back\", \"legs\"];\n\nexport const exercises = [\n  {\n    id: \"overhead-press\",\n    title: \"Overhead Press\",\n    description: \"Delts exercise...\",\n    muscles: \"shoulders\"\n  },\n  {\n    id: \"dips\",\n    title: \"Dips\",\n    description: \"Triceps exercise...\",\n    muscles: \"arms\"\n  },\n  {\n    id: \"barbell-curls\",\n    title: \"Barbell Curls\",\n    description: \"Biceps exercise...\",\n    muscles: \"arms\"\n  },\n  {\n    id: \"bench-press\",\n    title: \"Bench Press\",\n    description: \"Chest exercise...\",\n    muscles: \"chest\"\n  },\n  {\n    id: \"pull-ups\",\n    title: \"Pull Ups\",\n    description: \"Back and biceps exercise...\",\n    muscles: \"back\"\n  },\n  {\n    id: \"deadlifts\",\n    title: \"Deadlifts\",\n    description: \"Back and leg exercise...\",\n    muscles: \"back\"\n  },\n  {\n    id: \"squats\",\n    title: \"Squats\",\n    description: \"Legs exercise...\",\n    muscles: \"legs\"\n  },\n  {\n    id: \"squats\",\n    title: \"Squats\",\n    description: \"Legs exercise...\",\n    muscles: \"legs\"\n  },\n  {\n    id: \"squats\",\n    title: \"Squats\",\n    description: \"Legs exercise...\",\n    muscles: \"legs\"\n  },\n  {\n    id: \"squats\",\n    title: \"Squats\",\n    description: \"Legs exercise...\",\n    muscles: \"legs\"\n  },\n  {\n    id: \"squats\",\n    title: \"Squats\",\n    description: \"Legs exercise...\",\n    muscles: \"legs\"\n  },\n  \n];\n","import React, { Fragment } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from '@material-ui/core/List';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\n\nconst pane = props => {\n  let paneData = \"No Data to display\";\n  if (props.data !== undefined) {\n    paneData = props.data.map((dt, i) => {\n      return (\n        <Fragment>\n            \n            <ListItem key={i} selected={true} button  >\n          <Card key={i} raised={true} style={{width:'100%',height:'100%'}}>\n            <CardContent>\n              <Typography color=\"primary\" variant=\"subtitle1\">\n                {dt.muscles[0].toUpperCase() + dt.muscles.slice(1)}\n              </Typography>\n            </CardContent>\n            <CardActions>\n             Action Empty\n            </CardActions>\n          </Card>\n          </ListItem>\n        </Fragment>\n      );\n    });\n  }\n\n  return (\n    <Paper className='LeftPane' style={{overflowY:'auto',height:'800px',overflowX:'hidden'}}>\n       <AppBar position=\"static\" color='inherit' style={{backgroundColor:'orange',paddingBottom:'12px'}}>\n      <Typography align=\"left\" variant=\"h6\" style={{marginTop:'13px',marginLeft:'10px'}}>\n        <strong>Inventory List</strong>\n      </Typography>\n      </AppBar> \n      <Divider />\n      <List >\n      {paneData}\n      </List>\n    </Paper>\n  );\n};\n\nexport default pane;\n","import React, { Fragment } from \"react\";\nimport Card from \"@material-ui/core/Card\";\n\nimport CardContent from \"@material-ui/core/CardContent\";\nimport asd from '@material-ui/icons/'\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\n\nconst pane = props => {\n  let paneData = \"Not Selected\";\n   \n\n  return (\n    <Paper style={{width:\"100%\",height:\"100%\",margin:\"auto\"}}>\n        <Card raised style={{height:\"90%\",margin:\"10px\"}}>\n            <CardContent>\n                <Typography align=\"center\" variant=\"subtitle2\">\n                <strong>Inventory Details</strong>\n                 </Typography>\n            </CardContent>\n        </Card>\n      \n      \n     \n    </Paper>\n  );\n};\n\nexport default pane;\n","import React,{Component} from 'react';\nimport {muscles,exercises} from '../../store';\nimport Grid from '@material-ui/core/Grid';\nimport LeftPane from '../../components/layout/LeftPane';\nimport RightPane from '../../components/layout/RightPane';\n\nclass Inventory extends Component{\n\n\n    constructor(props){\n        super(props);\n        this.state={\n            data:exercises\n        };\n    }\n\n    render(){\n        return(\n           <Grid container> \n            <Grid item xs={12} sm={4} lg={4}>\n            <LeftPane data={this.state.data}/>\n            </Grid>\n            <Grid item xs={12} sm={8} lg={8}>\n            <RightPane/>\n            </Grid>\n           \n           </Grid>\n        );\n    }\n\n}\n\n\n\nexport default Inventory;","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\"\n\nconst header = props => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n        <MenuIcon />\n      </IconButton>\n      <Typography display='block' variant=\"subtitle1s\" color=\"inherit\">\n       <strong> NIKITH INVENTORY</strong>\n      </Typography>\n      \n      {/* <IconButton style={{marginLeft:'auto'}} edge=\"end\" color=\"inherit\" aria-label=\"button\">\n        < AccountBoxIcon/>\n      </IconButton>  */}\n    <Button style={{marginLeft:'auto'}} color=\"inherit\"><strong>Login</strong>  < AccountBoxIcon/></Button>\n   \n    \n    </Toolbar>\n  \n  </AppBar>\n);\n\nexport default header;\n","import React from \"react\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Paper from \"@material-ui/core/Paper\";\n\n\n\nconst footer = props => (\n  <div>\n    <Paper>\n      <Tabs value={0} indicatorColor=\"primary\" textColor=\"primary\" centered>\n        <Tab key='1' label='One' />;\n        <Tab key='2' label='Two' />;\n        <Tab key='3' label='Three' />;\n\n      </Tabs>\n    </Paper>\n  </div>\n);\n\nexport default footer;\n","import React,{Component, Fragment} from 'react';\nimport Inventory from './containers/inventory/Inventory';\nimport Header from './components/layout/Header';\nimport Footer from './components/layout/Footer';\nclass App extends Component {\n  render(){\n    return(\n      <Fragment>\n        <Header/>\n        <Inventory/>\n        <Footer/>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}